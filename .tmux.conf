# TODO: move panes around?
# https://gist.github.com/spicycode/1229612
# https://gist.github.com/Lartza/6a7a62466a8a3e436234412d9b1c5066
# https://www.rockyourcode.com/copy-and-paste-in-tmux/
# The copy-mode-vi table is used in copy mode if mode-keys is set to "vi".
# If you want to bind without the prefix key, use the -n or -T root option to bind-key.

# Remap prefix from C-b to C-space
unbind C-b
set -g prefix C-space
bind C-space send-prefix

# Set the base index for panes to 1 instead of 0
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# No delay for escape key press
set -sg escape-time 0

setw -g mode-keys vi
set -g status-keys vi
set -g history-limit 10000
setw -g monitor-activity on
set-window-option -g xterm-keys on

# Scroll wheel
set -g mouse on
# bind -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# copy / scroll mode navigate
# C-prefix B

# Vim style copy paste using xsel or xclip
# https://wiki.archlinux.org/title/Tmux#Key_bindings
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'tmux showb |xsel -i' \; display-message "Copied to Clipboard"
bind p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# # https://protechnotes.com/comprehensive-tmux-tutorial-for-beginners-with-a-cheat-sheet/
# set-option -g mouse on
# setw -g mode-key vi
# set-option -s set-clipboard off
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-selection
# bind -T copy-mode-vi r send-keys -X rectangle-toggle
# unbind -T copy-mode-vi Enter
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'tmux showb |xsel -i' \; display-message "Copied to Clipboard"
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'tmux showb |xsel -i' \; display-message "Copied to Clipboard"

# # Shift arrow to switch windows
# bind -n S-Left  previous-window
# bind -n S-Right next-window
# # bind -n M-`         last-window

bind ! break-pane  # pane to new window
# Pane splitting
bind s split-window -v -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R
bind m select-pane -L
bind n select-pane -D 
bind e select-pane -U
bind i select-pane -R
# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
bind -r M resize-pane -L 5
bind -r N resize-pane -D 5
bind -r E resize-pane -U 5
bind -r I resize-pane -R 5

# meta (Super) bindings      
# unuseable keys: t, c, s, u
bind -n  M-p new-window -c "#{pane_current_path}"
bind -n  M-z resize-pane -Z
bind -n  M-v split-window -h -c "#{pane_current_path}"
bind -n  M-d split-window -h -c "#{pane_current_path}"
bind -n  M-h split-window -v -c "#{pane_current_path}"
bind -n  M-m select-pane -L
bind -n  M-n select-pane -D
bind -n  M-e select-pane -U
bind -n  M-i select-pane -R
bind -nr M-M resize-pane -L 2
bind -nr M-N resize-pane -D 2
bind -nr M-E resize-pane -U 2
bind -nr M-I resize-pane -R 2
bind -n  M-1 select-window -t 1
bind -n  M-2 select-window -t 2
bind -n  M-3 select-window -t 3
bind -n  M-4 select-window -t 4
bind -n  M-5 select-window -t 5
bind -n  M-6 select-window -t 6
bind -n  M-7 select-window -t 7
bind -n  M-8 select-window -t 8
bind -n  M-9 select-window -t 9

# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# # # # bind-key -n 'C-m' if-shell "$is_vim" 'send-keys C-m'  'select-pane -L'  # cannot override RET
# # bind-key -n 'C-n' if-shell "$is_vim" 'send-keys C-n'  'select-pane -D'
# # bind-key -n 'C-e' if-shell "$is_vim" 'send-keys C-e'  'select-pane -U'
# # bind-key -n 'C-i' if-shell "$is_vim" 'send-keys C-i'  'select-pane -R'  # cant tab?
# # "\e[1;5I"
# # bind-key -n User0 if-shell "$is_vim" 'send-keys C-i'  'select-pane -R'  # cant tab?
# # bind-key -n '\e[33~' if-shell "$is_vim" 'send-keys C-i'  'select-pane -R'  # cant tab?
# # bind-key -n '\e[a6i' if-shell "$is_vim" 'send-keys C-i'  'select-pane -R'  # cant tab?
# bind-key -n 'C-n' if-shell "$is_vim" 'send-keys C-n'  'select-pane -D'
# bind-key -n 'C-e' if-shell "$is_vim" 'send-keys C-e'  'select-pane -R'
# bind-key -n 'C-o' if-shell "$is_vim" 'send-keys C-o'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# # bind-key -T copy-mode-vi 'C-\' select-pane -l
# bind-key -T copy-mode-vi 'C-m' select-pane -L
# bind-key -T copy-mode-vi 'C-n' select-pane -D
# bind-key -T copy-mode-vi 'C-e' select-pane -U
# # bind-key -T copy-mode-vi 'C-i' select-pane -R
# bind-key -T copy-mode-vi 'C-o' select-pane -R

# set -s user-keys[0] "\e[18;2~"
# set -s user-keys[1] "\e[1;2A6i"
# bind -n User0 select-pane -D
# bind -n User1 select-pane -R
# bind -n User0 send Escape "[33~"
# bind -n User0 send "\e[33~"

# # keep old funcionality behind prefix
# bind C-l send-keys 'C-l'
# bind C-k send-keys 'C-k'
# bind C-n send-keys 'C-n'
# bind C-e send-keys 'C-e'

bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# # Theme
# set -g default-terminal "tmux-256color" 
set -sg terminal-overrides ",*:RGB"
## COLORSCHEME: gruvbox dark (medium)
# https://github.com/egel/tmux-gruvbox/blob/master/tmux-gruvbox-dark.conf
set-option -g status "on"
# default statusbar color
set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1
# default window title colors
set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1
# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3
# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1
# pane border
# set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-active-border-style fg=colour6 #fg2
set-option -g pane-border-style fg=colour237 #bg1
# message infos
set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1
# writing commands inactive
set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1
# pane number display
# set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-active-colour colour6 #fg2
set-option -g display-panes-colour colour237 #bg1
# clock
set-window-option -g clock-mode-colour colour109 #blue
# bell
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg
## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""
set-option -g status-left "#[bg=colour241,fg=colour248] #S #[bg=colour237,fg=colour241,nobold,noitalics,nounderscore]"
set-option -g status-right "#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]#[bg=colour239,fg=colour246] %Y-%m-%d  %H:%M #[bg=colour239,fg=colour248,nobold,noitalics,nounderscore]#[bg=colour248,fg=colour237] #h "
set-window-option -g window-status-current-format "#[bg=colour214,fg=colour237,nobold,noitalics,nounderscore]#[bg=colour214,fg=colour239] #I #[bg=colour214,fg=colour239,bold] #W#{?window_zoomed_flag,*Z,} #[bg=colour237,fg=colour214,nobold,noitalics,nounderscore]"
set-window-option -g window-status-format "#[bg=colour239,fg=colour237,noitalics]#[bg=colour239,fg=colour223] #I #[bg=colour239,fg=colour223] #W #[bg=colour237,fg=colour239,noitalics]"
